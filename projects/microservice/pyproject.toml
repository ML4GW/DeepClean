[tool.typeo.base]
# global paths
run_directory = "${PROJECT_DIR}"

# global data args
channels = [
    "H1:GDS-CALIB_STRAIN",
#     "H1:GDS-CALIB_F_S_SQUARED",
#     "H1:GDS-CALIB_F_S_SQUARED_NOGATE",
#     "H1:GDS-CALIB_SRC_Q_INVERSE",
#     "H1:GDS-CALIB_SRC_Q_INVERSE_NOGATE",
#     "H1:GDS-CALIB_F_CC",
#     "H1:GDS-CALIB_F_CC_NOGATE",
#     "H1:GDS-CALIB_KAPPA_C",
#     "H1:GDS-CALIB_KAPPA_C_NOGATE",
#     "H1:GDS-CALIB_KAPPA_PUM_IMAGINARY",
#     "H1:GDS-CALIB_KAPPA_PUM_IMAGINARY_NOGATE",
#     "H1:GDS-CALIB_KAPPA_PUM_REAL",
#     "H1:GDS-CALIB_KAPPA_PUM_REAL_NOGATE",
#     "H1:GDS-CALIB_KAPPA_UIM_IMAGINARY",
#     "H1:GDS-CALIB_KAPPA_UIM_IMAGINARY_NOGATE",
#     "H1:GDS-CALIB_KAPPA_UIM_REAL",
#     "H1:GDS-CALIB_KAPPA_UIM_REAL_NOGATE",
#     "H1:GDS-CALIB_KAPPA_TST_IMAGINARY",
#     "H1:GDS-CALIB_KAPPA_TST_IMAGINARY_NOGATE",
#     "H1:GDS-CALIB_KAPPA_TST_REAL",
#     "H1:GDS-CALIB_KAPPA_TST_REAL_NOGATE",
#     "H1:GDS-CALIB_STATE_VECTOR",
    "H1:PEM-CS_MAINSMON_EBAY_1_DQ",
    "H1:ASC-INP1_P_INMON",
    "H1:ASC-INP1_Y_INMON",
    "H1:ASC-MICH_P_INMON",
    "H1:ASC-MICH_Y_INMON",
    "H1:ASC-PRC1_P_INMON",
    "H1:ASC-PRC1_Y_INMON",
    "H1:ASC-PRC2_P_INMON",
    "H1:ASC-PRC2_Y_INMON",
    "H1:ASC-SRC1_P_INMON",
    "H1:ASC-SRC1_Y_INMON",
    "H1:ASC-SRC2_P_INMON",
    "H1:ASC-SRC2_Y_INMON",
    "H1:ASC-DHARD_P_INMON",
    "H1:ASC-DHARD_Y_INMON",
    "H1:ASC-CHARD_P_INMON",
    "H1:ASC-CHARD_Y_INMON",
    "H1:ASC-DSOFT_P_INMON",
    "H1:ASC-DSOFT_Y_INMON",
    "H1:ASC-CSOFT_P_INMON",
    "H1:ASC-CSOFT_Y_INMON"
]
sample_rate = 4096
freq_low = 55
freq_high = 65

# global inference args
inference_sampling_rate = 512
inference_aggregation_time = 0.5
inference_batch_size = 256  # TODO: enforce that this is agg_time * inference_sampling_rate

# global misc args
verbose = false

[tool.typeo.scripts.train]
# paths
run_directory = "${base.run_directory}"
data_directory = "${DATA_DIR}"

# data parameters
channels = "${base.channels}"
train_duration = 2048
retrain_cadence = 1024
sample_rate = "${base.sample_rate}"
valid_frac = 0.25

# preprocessing parameters
kernel_length = 8
kernel_stride = 0.0625
freq_low = "${base.freq_low}"
freq_high = "${base.freq_high}"
filter_order = 8
fftlength = 2
overlap = 1
alpha = 1

# optimziation parameters
batch_size = 256
lr = 1e-3
fine_tune_decay = 0.1
weight_decay = 1e-5
max_epochs = 50
patience = 5
factor = 0.1

# misc. parameters
device = "cuda:0"
verbose = "${base.verbose}"

# architectures
[tool.typeo.scripts.train.architecture]
autoencoder = {}


[tool.typeo.scripts.exporter]
# paths
run_directory = "${base.run_directory}"

# data args
channels = "${base.channels}"
kernel_length = 1
sample_rate = "${base.sample_rate}"

# infer args
inference_sampling_rate = "${base.inference_sampling_rate}"
batch_size = "${base.inference_batch_size}"
aggregation_time = "${base.inference_aggregation_time}"

# triton args
streams_per_gpu = 2
platform = "tensorrt_plan"
instances = 4


[tool.typeo.scripts.clean]
# paths
run_directory = "${base.run_directory}"
data_directory = "${DATA_DIR}"

# data args
sample_rate = "${base.sample_rate}"
channels = "${base.channels}"
freq_low = "${base.freq_low}"
freq_high = "${base.freq_high}"
frame_length = 1
memory = 10
look_ahead = 0.5

# inference args
inference_sampling_rate = "${base.inference_sampling_rate}"
batch_size = "${base.inference_batch_size}"
inference_rate = 8
max_latency = "${base.inference_aggregation_time}"

# triton args
url = "localhost:8001"
model_name = "deepclean-stream"
model_version = -1
sequence_id = 1001

# misc args
start_first = true
timeout = 3
verbose = "${base.verbose}"
max_files = 4096
